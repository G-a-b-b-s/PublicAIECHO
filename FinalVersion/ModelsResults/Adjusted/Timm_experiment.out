t0031
t0031
t0031
t0031
t0031
t0031
t0031
t0031
t0031
t0031

Modules based on Lua: Version 8.5.8  2021-06-30 14:16 -05:00
    by Robert McLay mclay@tacc.utexas.edu

module [options] sub-command [args ...]

Help sub-commands:
------------------
  help                              prints this message
  help                module [...]  print help message from module(s)

Loading/Unloading sub-commands:
-------------------------------
  load | add          module [...]  load module(s)
  try-load | try-add  module [...]  Add module(s), do not complain if not
                                    found
  del | unload        module [...]  Remove module(s), do not complain if not
                                    found
  swap | sw | switch  m1 m2         unload m1 and load m2
  purge                             unload all modules
  refresh                           reload aliases from current list of
                                    modules.
  update                            reload all currently loaded modules.

Listing / Searching sub-commands:
---------------------------------
  list                              List loaded modules
  list                s1 s2 ...     List loaded modules that match the
                                    pattern
  avail | av                        List available modules
  avail | av          string        List available modules that contain
                                    "string".
  spider                            List all possible modules
  spider              module        List all possible version of that module
                                    file
  spider              string        List all module that contain the
                                    "string".
  spider              name/version  Detailed information about that version
                                    of the module.
  whatis              module        Print whatis information about module
  keyword | key       string        Search all name and whatis that contain
                                    "string".

Searching with Lmod:
--------------------
  All searching (spider, list, avail, keyword) support regular expressions:
  

  -r spider           '^p'          Finds all the modules that start with
                                    `p' or `P'
  -r spider           mpi           Finds all modules that have "mpi" in
                                    their name.
  -r spider           'mpi$         Finds all modules that end with "mpi" in
                                    their name.

Handling a collection of modules:
--------------------------------
  save | s                          Save the current list of modules to a
                                    user defined "default" collection.
  save | s            name          Save the current list of modules to
                                    "name" collection.
  reset                             The same as "restore system"
  restore | r                       Restore modules from the user's
                                    "default" or system default.
  restore | r         name          Restore modules from "name" collection.
  restore             system        Restore module state to system defaults.
  savelist                          List of saved collections.
  describe | mcc      name          Describe the contents of a module
                                    collection.
  disable             name          Disable (i.e. remove) a collection.

Deprecated commands:
--------------------
  getdefault          [name]        load name collection of modules or
                                    user's "default" if no name given.
                                    ===> Use "restore" instead <====
  setdefault          [name]        Save current list of modules to name if
                                    given, otherwise save as the default
                                    list for you the user.
                                    ===> Use "save" instead. <====

Miscellaneous sub-commands:
---------------------------
  is-loaded           modulefile    return a true status if module is loaded
  is-avail            modulefile    return a true status if module can be
                                    loaded
  show                modulefile    show the commands in the module file.
  use [-a]            path          Prepend or Append path to MODULEPATH.
  unuse               path          remove path from MODULEPATH.
  tablelist                         output list of active modules as a lua
                                    table.

Important Environment Variables:
--------------------------------
  LMOD_COLORIZE                     If defined to be "YES" then Lmod prints
                                    properties and warning in color.

    --------------------------------------------------------------------------

Lmod Web Sites

  Documentation:    http://lmod.readthedocs.org
  GitHub:           https://github.com/TACC/Lmod
  SourceForge:      https://lmod.sf.net
  TACC Homepage:    https://www.tacc.utexas.edu/research-development/tacc-projects/lmod

  To report a bug please read http://lmod.readthedocs.io/en/latest/075_bug_reporting.html
    --------------------------------------------------------------------------


2025-04-05 21:32:01.932594: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1743881522.097309 2141718 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1743881522.151147 2141718 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2025-04-05 21:32:02.424018: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
INFO:timm.models._builder:Loading pretrained weights from Hugging Face hub (timm/resnet18.a1_in1k)
INFO:timm.models._hub:[timm/resnet18.a1_in1k] Safe alternative available for 'pytorch_model.bin' (as 'model.safetensors'). Loading weights using safetensors.
INFO:timm.models._builder:Converted input conv conv1 pretrained weights from 3 to 30 channel(s)
INFO:timm.models._builder:Missing keys (fc.weight, fc.bias) discovered while loading pretrained weights. This is expected if model is being adapted.
============================MODEL ResNet18============================
Starting Fold 1/5
Epoch 1
Train Loss: 1.3481
Validation AUC: 0.7177
Best model saved with AUC: 0.7177
Epoch 2
Train Loss: 1.2234
Validation AUC: 0.7494
Best model saved with AUC: 0.7494
Epoch 3
Train Loss: 1.1416
Validation AUC: 0.8007
Best model saved with AUC: 0.8007
Epoch 4
Train Loss: 1.0930
Validation AUC: 0.8003
Epoch 5
Train Loss: 1.0440
Validation AUC: 0.8261
Best model saved with AUC: 0.8261
Epoch 6
Train Loss: 0.9807
Validation AUC: 0.8410
Best model saved with AUC: 0.8410
Epoch 7
Train Loss: 0.9352
Validation AUC: 0.8430
Best model saved with AUC: 0.8430
Epoch 8
Train Loss: 0.8832
Validation AUC: 0.8741
Best model saved with AUC: 0.8741
Epoch 9
Train Loss: 0.8546
Validation AUC: 0.8918
Best model saved with AUC: 0.8918
Epoch 10
Train Loss: 0.8252
Validation AUC: 0.8887
Epoch 11
Train Loss: 0.7876
Validation AUC: 0.9130
Best model saved with AUC: 0.9130
Epoch 12
Train Loss: 0.7541
Validation AUC: 0.9282
Best model saved with AUC: 0.9282
Epoch 13
Train Loss: 0.6845
Validation AUC: 0.9186
Epoch 14
Train Loss: 0.7079
Validation AUC: 0.9263
Epoch 15
Train Loss: 0.6633
Validation AUC: 0.9257
Epoch 16
Train Loss: 0.6214
Validation AUC: 0.9337
Best model saved with AUC: 0.9337
Epoch 17
Train Loss: 0.5829
Validation AUC: 0.9351
Best model saved with AUC: 0.9351
Epoch 18
Train Loss: 0.5546
Validation AUC: 0.9469
Best model saved with AUC: 0.9469
Epoch 19
Train Loss: 0.5463
Validation AUC: 0.9524
Best model saved with AUC: 0.9524
Epoch 20
Train Loss: 0.5279
Validation AUC: 0.9568
Best model saved with AUC: 0.9568
Epoch 21
Train Loss: 0.5010
Validation AUC: 0.9513
Epoch 22
Train Loss: 0.4896
Validation AUC: 0.9630
Best model saved with AUC: 0.9630
Epoch 23
Train Loss: 0.4526
Validation AUC: 0.9478
Epoch 24
Train Loss: 0.4351
Validation AUC: 0.9688
Best model saved with AUC: 0.9688
Epoch 25
Train Loss: 0.3977
Validation AUC: 0.9646
Epoch 26
Train Loss: 0.3952
Validation AUC: 0.9746
Best model saved with AUC: 0.9746
Epoch 27
Train Loss: 0.3755
Validation AUC: 0.9736
Epoch 28
Train Loss: 0.3554
Validation AUC: 0.9723
Epoch 29
Train Loss: 0.3395
Validation AUC: 0.9823
Best model saved with AUC: 0.9823
Epoch 30
Train Loss: 0.3154
Validation AUC: 0.9720
Epoch 31
Train Loss: 0.3139
Validation AUC: 0.9812
Epoch 32
Train Loss: 0.2943
Validation AUC: 0.9822
Epoch 33
Train Loss: 0.2859
Validation AUC: 0.9840
Best model saved with AUC: 0.9840
Epoch 34
Train Loss: 0.2622
Validation AUC: 0.9845
Best model saved with AUC: 0.9845
Epoch 35
Train Loss: 0.2633
Validation AUC: 0.9844
Epoch 36
Train Loss: 0.2370
Validation AUC: 0.9859
Best model saved with AUC: 0.9859
Epoch 37
Train Loss: 0.2364
Validation AUC: 0.9915
Best model saved with AUC: 0.9915
Epoch 38
Train Loss: 0.2252
Validation AUC: 0.9840
Epoch 39
Train Loss: 0.2067
Validation AUC: 0.9921
Best model saved with AUC: 0.9921
Epoch 40
Train Loss: 0.2052
Validation AUC: 0.9935
Best model saved with AUC: 0.9935
Epoch 41
Train Loss: 0.1939
Validation AUC: 0.9907
Epoch 42
Train Loss: 0.1873
Validation AUC: 0.9898
Epoch 43
Train Loss: 0.1752
Validation AUC: 0.9955
Best model saved with AUC: 0.9955
Epoch 44
Train Loss: 0.1601
Validation AUC: 0.9954
Epoch 45
Train Loss: 0.1609
Validation AUC: 0.9960
Best model saved with AUC: 0.9960
Epoch 46
Train Loss: 0.1563
Validation AUC: 0.9963
Best model saved with AUC: 0.9963
Epoch 47
Train Loss: 0.1445
Validation AUC: 0.9947
Epoch 48
Train Loss: 0.1361
Validation AUC: 0.9975
Best model saved with AUC: 0.9975
Epoch 49
Train Loss: 0.1394
Validation AUC: 0.9931
Epoch 50
Train Loss: 0.1288
Validation AUC: 0.9908
Starting Fold 2/5
Epoch 1
Train Loss: 0.1446
Validation AUC: 0.9998
Best model saved with AUC: 0.9998
Epoch 2
Train Loss: 0.1439
Validation AUC: 0.9991
Epoch 3
Train Loss: 0.1420
Validation AUC: 0.9993
Epoch 4
Train Loss: 0.1295
Validation AUC: 0.9992
Epoch 5
Train Loss: 0.1258
Validation AUC: 0.9984
Early stopping triggered.
Starting Fold 3/5
Epoch 1
Train Loss: 0.1202
Validation AUC: 0.9999
Best model saved with AUC: 0.9999
Epoch 2
Train Loss: 0.1193
Validation AUC: 0.9994
Epoch 3
Train Loss: 0.1228
Validation AUC: 0.9991
Epoch 4
Train Loss: 0.1151
Validation AUC: 0.9991
Epoch 5
Train Loss: 0.1112
Validation AUC: 0.9959
Early stopping triggered.
Starting Fold 4/5
Epoch 1
Train Loss: 0.1138
Validation AUC: 0.9998
Best model saved with AUC: 0.9998
Epoch 2
Train Loss: 0.0979
Validation AUC: 0.9996
Epoch 3
Train Loss: 0.0826
Validation AUC: 0.9998
Best model saved with AUC: 0.9998
Epoch 4
Train Loss: 0.0821
Validation AUC: 0.9998
Epoch 5
Train Loss: 0.0742
Validation AUC: 0.9989
Epoch 6
Train Loss: 0.0885
Validation AUC: 0.9995
Epoch 7
Train Loss: 0.0808
Validation AUC: 1.0000
Best model saved with AUC: 1.0000
Epoch 8
Train Loss: 0.0840
Validation AUC: 1.0000
Epoch 9
Train Loss: 0.0700
Validation AUC: 0.9996
Epoch 10
Train Loss: 0.0761
Validation AUC: 0.9996
Epoch 11
Train Loss: 0.0744
Validation AUC: 0.9996
Early stopping triggered.
Starting Fold 5/5
Epoch 1
Train Loss: 0.0726
Validation AUC: 0.9999
Best model saved with AUC: 0.9999
Epoch 2
Train Loss: 0.0609
Validation AUC: 0.9996
Epoch 3
Train Loss: 0.0726
Validation AUC: 1.0000
Best model saved with AUC: 1.0000
Epoch 4
Train Loss: 0.0838
Validation AUC: 0.9994
Epoch 5
Train Loss: 0.0647
Validation AUC: 1.0000
Epoch 6
Train Loss: 0.0561
Validation AUC: 0.9997
Epoch 7
Train Loss: 0.0554
Validation AUC: 0.9999
Early stopping triggered.
Training completed.
Loading best model for Fold 1...
Loading best model for Fold 2...
Loading best model for Fold 3...
Loading best model for Fold 4...
Loading best model for Fold 5...
=== Test Results ===
Test Set AUC: 0.7428
Certainty (Standard Deviation) across folds: 0.10696546733379364
{'ResNet18': {'AUC': 0.7427736772686522, 'Certainty': 0.10696547}}
