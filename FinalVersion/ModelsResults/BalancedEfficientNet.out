t0008
t0008
t0008
t0008
t0008
t0008
t0008
t0008
t0008
t0008

Modules based on Lua: Version 8.5.8  2021-06-30 14:16 -05:00
    by Robert McLay mclay@tacc.utexas.edu

module [options] sub-command [args ...]

Help sub-commands:
------------------
  help                              prints this message
  help                module [...]  print help message from module(s)

Loading/Unloading sub-commands:
-------------------------------
  load | add          module [...]  load module(s)
  try-load | try-add  module [...]  Add module(s), do not complain if not
                                    found
  del | unload        module [...]  Remove module(s), do not complain if not
                                    found
  swap | sw | switch  m1 m2         unload m1 and load m2
  purge                             unload all modules
  refresh                           reload aliases from current list of
                                    modules.
  update                            reload all currently loaded modules.

Listing / Searching sub-commands:
---------------------------------
  list                              List loaded modules
  list                s1 s2 ...     List loaded modules that match the
                                    pattern
  avail | av                        List available modules
  avail | av          string        List available modules that contain
                                    "string".
  spider                            List all possible modules
  spider              module        List all possible version of that module
                                    file
  spider              string        List all module that contain the
                                    "string".
  spider              name/version  Detailed information about that version
                                    of the module.
  whatis              module        Print whatis information about module
  keyword | key       string        Search all name and whatis that contain
                                    "string".

Searching with Lmod:
--------------------
  All searching (spider, list, avail, keyword) support regular expressions:
  

  -r spider           '^p'          Finds all the modules that start with
                                    `p' or `P'
  -r spider           mpi           Finds all modules that have "mpi" in
                                    their name.
  -r spider           'mpi$         Finds all modules that end with "mpi" in
                                    their name.

Handling a collection of modules:
--------------------------------
  save | s                          Save the current list of modules to a
                                    user defined "default" collection.
  save | s            name          Save the current list of modules to
                                    "name" collection.
  reset                             The same as "restore system"
  restore | r                       Restore modules from the user's
                                    "default" or system default.
  restore | r         name          Restore modules from "name" collection.
  restore             system        Restore module state to system defaults.
  savelist                          List of saved collections.
  describe | mcc      name          Describe the contents of a module
                                    collection.
  disable             name          Disable (i.e. remove) a collection.

Deprecated commands:
--------------------
  getdefault          [name]        load name collection of modules or
                                    user's "default" if no name given.
                                    ===> Use "restore" instead <====
  setdefault          [name]        Save current list of modules to name if
                                    given, otherwise save as the default
                                    list for you the user.
                                    ===> Use "save" instead. <====

Miscellaneous sub-commands:
---------------------------
  is-loaded           modulefile    return a true status if module is loaded
  is-avail            modulefile    return a true status if module can be
                                    loaded
  show                modulefile    show the commands in the module file.
  use [-a]            path          Prepend or Append path to MODULEPATH.
  unuse               path          remove path from MODULEPATH.
  tablelist                         output list of active modules as a lua
                                    table.

Important Environment Variables:
--------------------------------
  LMOD_COLORIZE                     If defined to be "YES" then Lmod prints
                                    properties and warning in color.

    --------------------------------------------------------------------------

Lmod Web Sites

  Documentation:    http://lmod.readthedocs.org
  GitHub:           https://github.com/TACC/Lmod
  SourceForge:      https://lmod.sf.net
  TACC Homepage:    https://www.tacc.utexas.edu/research-development/tacc-projects/lmod

  To report a bug please read http://lmod.readthedocs.io/en/latest/075_bug_reporting.html
    --------------------------------------------------------------------------


INFO:root:Number of training samples: 3768
INFO:root:Number of test samples: 766
/net/people/plgrid/plggabcza/.local/lib/python3.9/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/net/people/plgrid/plggabcza/.local/lib/python3.9/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=EfficientNet_B0_Weights.IMAGENET1K_V1`. You can also use `weights=EfficientNet_B0_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
[1.50961538 0.68759124 0.74290221 1.86166008]
Starting Fold 1/5
Epoch 1
Train Loss: 1.3180
Validation AUC: 0.7826
Best model saved with AUC: 0.7826
Epoch 2
Train Loss: 1.2015
Validation AUC: 0.8424
Best model saved with AUC: 0.8424
Epoch 3
Train Loss: 1.1013
Validation AUC: 0.8732
Best model saved with AUC: 0.8732
Epoch 4
Train Loss: 1.0002
Validation AUC: 0.8975
Best model saved with AUC: 0.8975
Epoch 5
Train Loss: 0.8812
Validation AUC: 0.9239
Best model saved with AUC: 0.9239
Epoch 6
Train Loss: 0.7840
Validation AUC: 0.9409
Best model saved with AUC: 0.9409
Epoch 7
Train Loss: 0.6718
Validation AUC: 0.9555
Best model saved with AUC: 0.9555
Epoch 8
Train Loss: 0.5932
Validation AUC: 0.9623
Best model saved with AUC: 0.9623
Epoch 9
Train Loss: 0.5174
Validation AUC: 0.9710
Best model saved with AUC: 0.9710
Epoch 10
Train Loss: 0.4525
Validation AUC: 0.9760
Best model saved with AUC: 0.9760
Epoch 11
Train Loss: 0.3938
Validation AUC: 0.9795
Best model saved with AUC: 0.9795
Epoch 12
Train Loss: 0.3518
Validation AUC: 0.9848
Best model saved with AUC: 0.9848
Epoch 13
Train Loss: 0.3119
Validation AUC: 0.9867
Best model saved with AUC: 0.9867
Epoch 14
Train Loss: 0.2674
Validation AUC: 0.9879
Best model saved with AUC: 0.9879
Epoch 15
Train Loss: 0.2438
Validation AUC: 0.9882
Best model saved with AUC: 0.9882
Epoch 16
Train Loss: 0.2118
Validation AUC: 0.9904
Best model saved with AUC: 0.9904
Epoch 17
Train Loss: 0.2149
Validation AUC: 0.9926
Best model saved with AUC: 0.9926
Epoch 18
Train Loss: 0.1838
Validation AUC: 0.9927
Best model saved with AUC: 0.9927
Epoch 19
Train Loss: 0.1839
Validation AUC: 0.9928
Best model saved with AUC: 0.9928
Epoch 20
Train Loss: 0.1684
Validation AUC: 0.9922
Epoch 21
Train Loss: 0.1482
Validation AUC: 0.9944
Best model saved with AUC: 0.9944
Epoch 22
Train Loss: 0.1480
Validation AUC: 0.9936
Epoch 23
Train Loss: 0.1354
Validation AUC: 0.9946
Best model saved with AUC: 0.9946
Epoch 24
Train Loss: 0.1101
Validation AUC: 0.9961
Best model saved with AUC: 0.9961
Epoch 25
Train Loss: 0.1162
Validation AUC: 0.9949
Epoch 26
Train Loss: 0.1115
Validation AUC: 0.9939
Epoch 27
Train Loss: 0.0913
Validation AUC: 0.9950
Epoch 28
Train Loss: 0.0832
Validation AUC: 0.9955
Early stopping triggered.
Starting Fold 2/5
Epoch 1
Train Loss: 0.1583
Validation AUC: 1.0000
Best model saved with AUC: 1.0000
Epoch 2
Train Loss: 0.1505
Validation AUC: 1.0000
Epoch 3
Train Loss: 0.1225
Validation AUC: 1.0000
Epoch 4
Train Loss: 0.1105
Validation AUC: 1.0000
Epoch 5
Train Loss: 0.0898
Validation AUC: 1.0000
Early stopping triggered.
Starting Fold 3/5
Epoch 1
Train Loss: 0.0954
Validation AUC: 1.0000
Best model saved with AUC: 1.0000
Epoch 2
Train Loss: 0.1004
Validation AUC: 1.0000
Epoch 3
Train Loss: 0.0915
Validation AUC: 1.0000
Epoch 4
Train Loss: 0.0791
Validation AUC: 1.0000
Epoch 5
Train Loss: 0.0828
Validation AUC: 1.0000
Early stopping triggered.
Starting Fold 4/5
Epoch 1
Train Loss: 0.0771
Validation AUC: 1.0000
Best model saved with AUC: 1.0000
Epoch 2
Train Loss: 0.0716
Validation AUC: 1.0000
Epoch 3
Train Loss: 0.0624
Validation AUC: 1.0000
Epoch 4
Train Loss: 0.0808
Validation AUC: 1.0000
Epoch 5
Train Loss: 0.0583
Validation AUC: 1.0000
Early stopping triggered.
Starting Fold 5/5
Epoch 1
Train Loss: 0.0595
Validation AUC: 1.0000
Best model saved with AUC: 1.0000
Epoch 2
Train Loss: 0.0498
Validation AUC: 1.0000
Epoch 3
Train Loss: 0.0536
Validation AUC: 1.0000
Epoch 4
Train Loss: 0.0508
Validation AUC: 1.0000
Epoch 5
Train Loss: 0.0509
Validation AUC: 1.0000
Early stopping triggered.
Training completed.
Loading best model for Fold 1...
Loading best model for Fold 2...
Loading best model for Fold 3...
Loading best model for Fold 4...
Loading best model for Fold 5...
=== Test Results ===
Test Set AUC: 0.7391
Certainty (Standard Deviation) across folds: 0.04141690954566002
