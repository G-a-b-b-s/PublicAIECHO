t0046
t0046
t0046
t0046
t0046
t0046
t0046
t0046
t0046
t0046

Modules based on Lua: Version 8.5.8  2021-06-30 14:16 -05:00
    by Robert McLay mclay@tacc.utexas.edu

module [options] sub-command [args ...]

Help sub-commands:
------------------
  help                              prints this message
  help                module [...]  print help message from module(s)

Loading/Unloading sub-commands:
-------------------------------
  load | add          module [...]  load module(s)
  try-load | try-add  module [...]  Add module(s), do not complain if not
                                    found
  del | unload        module [...]  Remove module(s), do not complain if not
                                    found
  swap | sw | switch  m1 m2         unload m1 and load m2
  purge                             unload all modules
  refresh                           reload aliases from current list of
                                    modules.
  update                            reload all currently loaded modules.

Listing / Searching sub-commands:
---------------------------------
  list                              List loaded modules
  list                s1 s2 ...     List loaded modules that match the
                                    pattern
  avail | av                        List available modules
  avail | av          string        List available modules that contain
                                    "string".
  spider                            List all possible modules
  spider              module        List all possible version of that module
                                    file
  spider              string        List all module that contain the
                                    "string".
  spider              name/version  Detailed information about that version
                                    of the module.
  whatis              module        Print whatis information about module
  keyword | key       string        Search all name and whatis that contain
                                    "string".

Searching with Lmod:
--------------------
  All searching (spider, list, avail, keyword) support regular expressions:
  

  -r spider           '^p'          Finds all the modules that start with
                                    `p' or `P'
  -r spider           mpi           Finds all modules that have "mpi" in
                                    their name.
  -r spider           'mpi$         Finds all modules that end with "mpi" in
                                    their name.

Handling a collection of modules:
--------------------------------
  save | s                          Save the current list of modules to a
                                    user defined "default" collection.
  save | s            name          Save the current list of modules to
                                    "name" collection.
  reset                             The same as "restore system"
  restore | r                       Restore modules from the user's
                                    "default" or system default.
  restore | r         name          Restore modules from "name" collection.
  restore             system        Restore module state to system defaults.
  savelist                          List of saved collections.
  describe | mcc      name          Describe the contents of a module
                                    collection.
  disable             name          Disable (i.e. remove) a collection.

Deprecated commands:
--------------------
  getdefault          [name]        load name collection of modules or
                                    user's "default" if no name given.
                                    ===> Use "restore" instead <====
  setdefault          [name]        Save current list of modules to name if
                                    given, otherwise save as the default
                                    list for you the user.
                                    ===> Use "save" instead. <====

Miscellaneous sub-commands:
---------------------------
  is-loaded           modulefile    return a true status if module is loaded
  is-avail            modulefile    return a true status if module can be
                                    loaded
  show                modulefile    show the commands in the module file.
  use [-a]            path          Prepend or Append path to MODULEPATH.
  unuse               path          remove path from MODULEPATH.
  tablelist                         output list of active modules as a lua
                                    table.

Important Environment Variables:
--------------------------------
  LMOD_COLORIZE                     If defined to be "YES" then Lmod prints
                                    properties and warning in color.

    --------------------------------------------------------------------------

Lmod Web Sites

  Documentation:    http://lmod.readthedocs.org
  GitHub:           https://github.com/TACC/Lmod
  SourceForge:      https://lmod.sf.net
  TACC Homepage:    https://www.tacc.utexas.edu/research-development/tacc-projects/lmod

  To report a bug please read http://lmod.readthedocs.io/en/latest/075_bug_reporting.html
    --------------------------------------------------------------------------


INFO:root:Number of training samples: 3768
INFO:root:Number of test samples: 766
/net/people/plgrid/plggabcza/.local/lib/python3.9/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/net/people/plgrid/plggabcza/.local/lib/python3.9/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=EfficientNet_B0_Weights.IMAGENET1K_V1`. You can also use `weights=EfficientNet_B0_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Starting Fold 1/5
Epoch 1
Train Loss: 1.2650
Validation AUC: 0.7649
Best model saved with AUC: 0.7649
Epoch 2
Train Loss: 1.1144
Validation AUC: 0.8177
Best model saved with AUC: 0.8177
Epoch 3
Train Loss: 1.0068
Validation AUC: 0.8625
Best model saved with AUC: 0.8625
Epoch 4
Train Loss: 0.9028
Validation AUC: 0.8981
Best model saved with AUC: 0.8981
Epoch 5
Train Loss: 0.8087
Validation AUC: 0.9256
Best model saved with AUC: 0.9256
Epoch 6
Train Loss: 0.7360
Validation AUC: 0.9436
Best model saved with AUC: 0.9436
Epoch 7
Train Loss: 0.6400
Validation AUC: 0.9561
Best model saved with AUC: 0.9561
Epoch 8
Train Loss: 0.5529
Validation AUC: 0.9630
Best model saved with AUC: 0.9630
Epoch 9
Train Loss: 0.4946
Validation AUC: 0.9725
Best model saved with AUC: 0.9725
Epoch 10
Train Loss: 0.4654
Validation AUC: 0.9770
Best model saved with AUC: 0.9770
Epoch 11
Train Loss: 0.4066
Validation AUC: 0.9804
Best model saved with AUC: 0.9804
Epoch 12
Train Loss: 0.3603
Validation AUC: 0.9853
Best model saved with AUC: 0.9853
Epoch 13
Train Loss: 0.3229
Validation AUC: 0.9860
Best model saved with AUC: 0.9860
Epoch 14
Train Loss: 0.2867
Validation AUC: 0.9904
Best model saved with AUC: 0.9904
Epoch 15
Train Loss: 0.2534
Validation AUC: 0.9920
Best model saved with AUC: 0.9920
Epoch 16
Train Loss: 0.2330
Validation AUC: 0.9931
Best model saved with AUC: 0.9931
Epoch 17
Train Loss: 0.2165
Validation AUC: 0.9951
Best model saved with AUC: 0.9951
Epoch 18
Train Loss: 0.1770
Validation AUC: 0.9961
Best model saved with AUC: 0.9961
Epoch 19
Train Loss: 0.1777
Validation AUC: 0.9963
Best model saved with AUC: 0.9963
Epoch 20
Train Loss: 0.1466
Validation AUC: 0.9972
Best model saved with AUC: 0.9972
Epoch 21
Train Loss: 0.1435
Validation AUC: 0.9974
Best model saved with AUC: 0.9974
Epoch 22
Train Loss: 0.1335
Validation AUC: 0.9979
Best model saved with AUC: 0.9979
Epoch 23
Train Loss: 0.1125
Validation AUC: 0.9971
Epoch 24
Train Loss: 0.1028
Validation AUC: 0.9986
Best model saved with AUC: 0.9986
Epoch 25
Train Loss: 0.1182
Validation AUC: 0.9982
Epoch 26
Train Loss: 0.1140
Validation AUC: 0.9985
Epoch 27
Train Loss: 0.1114
Validation AUC: 0.9982
Epoch 28
Train Loss: 0.0936
Validation AUC: 0.9985
Early stopping triggered.
Starting Fold 2/5
Epoch 1
Train Loss: 0.1253
Validation AUC: 1.0000
Best model saved with AUC: 1.0000
Epoch 2
Train Loss: 0.1133
Validation AUC: 1.0000
Epoch 3
Train Loss: 0.1184
Validation AUC: 1.0000
Epoch 4
Train Loss: 0.0990
Validation AUC: 1.0000
Epoch 5
Train Loss: 0.0920
Validation AUC: 1.0000
Early stopping triggered.
Starting Fold 3/5
Epoch 1
Train Loss: 0.0906
Validation AUC: 1.0000
Best model saved with AUC: 1.0000
Epoch 2
Train Loss: 0.0808
Validation AUC: 1.0000
Epoch 3
Train Loss: 0.0881
Validation AUC: 1.0000
Epoch 4
Train Loss: 0.0767
Validation AUC: 1.0000
Epoch 5
Train Loss: 0.0752
Validation AUC: 1.0000
Early stopping triggered.
Starting Fold 4/5
Epoch 1
Train Loss: 0.0781
Validation AUC: 1.0000
Best model saved with AUC: 1.0000
Epoch 2
Train Loss: 0.0577
Validation AUC: 1.0000
Epoch 3
Train Loss: 0.0720
Validation AUC: 1.0000
Epoch 4
Train Loss: 0.0606
Validation AUC: 1.0000
Epoch 5
Train Loss: 0.0638
Validation AUC: 1.0000
Early stopping triggered.
Starting Fold 5/5
Epoch 1
Train Loss: 0.0643
Validation AUC: 1.0000
Best model saved with AUC: 1.0000
Epoch 2
Train Loss: 0.0556
Validation AUC: 1.0000
Epoch 3
Train Loss: 0.0512
Validation AUC: 1.0000
Epoch 4
Train Loss: 0.0474
Validation AUC: 1.0000
Epoch 5
Train Loss: 0.0468
Validation AUC: 1.0000
Early stopping triggered.
Training completed.
Loading best model for Fold 1...
Loading best model for Fold 2...
Loading best model for Fold 3...
Loading best model for Fold 4...
Loading best model for Fold 5...
=== Test Results ===
Test Set AUC: 0.7290
Certainty (Standard Deviation) across folds: 0.0524231418967247
