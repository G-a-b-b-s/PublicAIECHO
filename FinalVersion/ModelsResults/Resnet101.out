t0040
t0040
t0040
t0040
t0040
t0040
t0040
t0040
t0040
t0040

Modules based on Lua: Version 8.5.8  2021-06-30 14:16 -05:00
    by Robert McLay mclay@tacc.utexas.edu

module [options] sub-command [args ...]

Help sub-commands:
------------------
  help                              prints this message
  help                module [...]  print help message from module(s)

Loading/Unloading sub-commands:
-------------------------------
  load | add          module [...]  load module(s)
  try-load | try-add  module [...]  Add module(s), do not complain if not
                                    found
  del | unload        module [...]  Remove module(s), do not complain if not
                                    found
  swap | sw | switch  m1 m2         unload m1 and load m2
  purge                             unload all modules
  refresh                           reload aliases from current list of
                                    modules.
  update                            reload all currently loaded modules.

Listing / Searching sub-commands:
---------------------------------
  list                              List loaded modules
  list                s1 s2 ...     List loaded modules that match the
                                    pattern
  avail | av                        List available modules
  avail | av          string        List available modules that contain
                                    "string".
  spider                            List all possible modules
  spider              module        List all possible version of that module
                                    file
  spider              string        List all module that contain the
                                    "string".
  spider              name/version  Detailed information about that version
                                    of the module.
  whatis              module        Print whatis information about module
  keyword | key       string        Search all name and whatis that contain
                                    "string".

Searching with Lmod:
--------------------
  All searching (spider, list, avail, keyword) support regular expressions:
  

  -r spider           '^p'          Finds all the modules that start with
                                    `p' or `P'
  -r spider           mpi           Finds all modules that have "mpi" in
                                    their name.
  -r spider           'mpi$         Finds all modules that end with "mpi" in
                                    their name.

Handling a collection of modules:
--------------------------------
  save | s                          Save the current list of modules to a
                                    user defined "default" collection.
  save | s            name          Save the current list of modules to
                                    "name" collection.
  reset                             The same as "restore system"
  restore | r                       Restore modules from the user's
                                    "default" or system default.
  restore | r         name          Restore modules from "name" collection.
  restore             system        Restore module state to system defaults.
  savelist                          List of saved collections.
  describe | mcc      name          Describe the contents of a module
                                    collection.
  disable             name          Disable (i.e. remove) a collection.

Deprecated commands:
--------------------
  getdefault          [name]        load name collection of modules or
                                    user's "default" if no name given.
                                    ===> Use "restore" instead <====
  setdefault          [name]        Save current list of modules to name if
                                    given, otherwise save as the default
                                    list for you the user.
                                    ===> Use "save" instead. <====

Miscellaneous sub-commands:
---------------------------
  is-loaded           modulefile    return a true status if module is loaded
  is-avail            modulefile    return a true status if module can be
                                    loaded
  show                modulefile    show the commands in the module file.
  use [-a]            path          Prepend or Append path to MODULEPATH.
  unuse               path          remove path from MODULEPATH.
  tablelist                         output list of active modules as a lua
                                    table.

Important Environment Variables:
--------------------------------
  LMOD_COLORIZE                     If defined to be "YES" then Lmod prints
                                    properties and warning in color.

    --------------------------------------------------------------------------

Lmod Web Sites

  Documentation:    http://lmod.readthedocs.org
  GitHub:           https://github.com/TACC/Lmod
  SourceForge:      https://lmod.sf.net
  TACC Homepage:    https://www.tacc.utexas.edu/research-development/tacc-projects/lmod

  To report a bug please read http://lmod.readthedocs.io/en/latest/075_bug_reporting.html
    --------------------------------------------------------------------------


INFO:root:Number of training samples: 3768
INFO:root:Number of test samples: 766
/net/people/plgrid/plggabcza/.local/lib/python3.9/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/net/people/plgrid/plggabcza/.local/lib/python3.9/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.
  warnings.warn(msg)
Starting Fold 1/5
Epoch 1
Train Loss: 1.1995
Validation AUC: 0.7195
Best model saved with AUC: 0.7195
Epoch 2
Train Loss: 1.1637
Validation AUC: 0.7397
Best model saved with AUC: 0.7397
Epoch 3
Train Loss: 1.1520
Validation AUC: 0.7357
Epoch 4
Train Loss: 1.1303
Validation AUC: 0.7617
Best model saved with AUC: 0.7617
Epoch 5
Train Loss: 1.1101
Validation AUC: 0.7540
Epoch 6
Train Loss: 1.0732
Validation AUC: 0.7698
Best model saved with AUC: 0.7698
Epoch 7
Train Loss: 1.0437
Validation AUC: 0.7520
Epoch 8
Train Loss: 1.0021
Validation AUC: 0.8252
Best model saved with AUC: 0.8252
Epoch 9
Train Loss: 0.9553
Validation AUC: 0.8354
Best model saved with AUC: 0.8354
Epoch 10
Train Loss: 0.9037
Validation AUC: 0.8568
Best model saved with AUC: 0.8568
Epoch 11
Train Loss: 0.8518
Validation AUC: 0.8690
Best model saved with AUC: 0.8690
Epoch 12
Train Loss: 0.8051
Validation AUC: 0.8170
Epoch 13
Train Loss: 0.7671
Validation AUC: 0.8681
Epoch 14
Train Loss: 0.7446
Validation AUC: 0.8865
Best model saved with AUC: 0.8865
Epoch 15
Train Loss: 0.7063
Validation AUC: 0.9040
Best model saved with AUC: 0.9040
Epoch 16
Train Loss: 0.6555
Validation AUC: 0.9114
Best model saved with AUC: 0.9114
Epoch 17
Train Loss: 0.6117
Validation AUC: 0.9242
Best model saved with AUC: 0.9242
Epoch 18
Train Loss: 0.5872
Validation AUC: 0.9240
Epoch 19
Train Loss: 0.5451
Validation AUC: 0.9429
Best model saved with AUC: 0.9429
Epoch 20
Train Loss: 0.5356
Validation AUC: 0.9561
Best model saved with AUC: 0.9561
Epoch 21
Train Loss: 0.4999
Validation AUC: 0.9454
Epoch 22
Train Loss: 0.4550
Validation AUC: 0.9399
Epoch 23
Train Loss: 0.4682
Validation AUC: 0.9512
Epoch 24
Train Loss: 0.4313
Validation AUC: 0.9562
Best model saved with AUC: 0.9562
Epoch 25
Train Loss: 0.4005
Validation AUC: 0.9618
Best model saved with AUC: 0.9618
Epoch 26
Train Loss: 0.3684
Validation AUC: 0.9614
Epoch 27
Train Loss: 0.3479
Validation AUC: 0.9752
Best model saved with AUC: 0.9752
Epoch 28
Train Loss: 0.2917
Validation AUC: 0.9699
Epoch 29
Train Loss: 0.2393
Validation AUC: 0.9801
Best model saved with AUC: 0.9801
Epoch 30
Train Loss: 0.2688
Validation AUC: 0.9789
Epoch 31
Train Loss: 0.2373
Validation AUC: 0.9838
Best model saved with AUC: 0.9838
Epoch 32
Train Loss: 0.2182
Validation AUC: 0.9846
Best model saved with AUC: 0.9846
Epoch 33
Train Loss: 0.2576
Validation AUC: 0.9844
Epoch 34
Train Loss: 0.2410
Validation AUC: 0.9798
Epoch 35
Train Loss: 0.2498
Validation AUC: 0.9840
Epoch 36
Train Loss: 0.2340
Validation AUC: 0.9839
Early stopping triggered.
Starting Fold 2/5
Epoch 1
Train Loss: 0.2610
Validation AUC: 0.9988
Best model saved with AUC: 0.9988
Epoch 2
Train Loss: 0.2621
Validation AUC: 0.9977
Epoch 3
Train Loss: 0.2024
Validation AUC: 0.9979
Epoch 4
Train Loss: 0.1878
Validation AUC: 0.9974
Epoch 5
Train Loss: 0.1603
Validation AUC: 0.9994
Best model saved with AUC: 0.9994
Epoch 6
Train Loss: 0.1549
Validation AUC: 0.9979
Epoch 7
Train Loss: 0.1703
Validation AUC: 0.9964
Epoch 8
Train Loss: 0.1633
Validation AUC: 0.9995
Best model saved with AUC: 0.9995
Epoch 9
Train Loss: 0.1492
Validation AUC: 0.9970
Epoch 10
Train Loss: 0.1644
Validation AUC: 0.9961
Epoch 11
Train Loss: 0.1351
Validation AUC: 0.9989
Epoch 12
Train Loss: 0.1363
Validation AUC: 0.9983
Early stopping triggered.
Starting Fold 3/5
Epoch 1
Train Loss: 0.1309
Validation AUC: 0.9999
Best model saved with AUC: 0.9999
Epoch 2
Train Loss: 0.1467
Validation AUC: 0.9999
Epoch 3
Train Loss: 0.1138
Validation AUC: 0.9993
Epoch 4
Train Loss: 0.1446
Validation AUC: 0.9998
Epoch 5
Train Loss: 0.1301
Validation AUC: 0.9998
Early stopping triggered.
Starting Fold 4/5
Epoch 1
Train Loss: 0.1214
Validation AUC: 0.9999
Best model saved with AUC: 0.9999
Epoch 2
Train Loss: 0.1397
Validation AUC: 0.9997
Epoch 3
Train Loss: 0.1352
Validation AUC: 0.9999
Epoch 4
Train Loss: 0.1121
Validation AUC: 0.9998
Epoch 5
Train Loss: 0.0983
Validation AUC: 0.9997
Early stopping triggered.
Starting Fold 5/5
Epoch 1
Train Loss: 0.0927
Validation AUC: 1.0000
Best model saved with AUC: 1.0000
Epoch 2
Train Loss: 0.0889
Validation AUC: 1.0000
Best model saved with AUC: 1.0000
Epoch 3
Train Loss: 0.0820
Validation AUC: 0.9999
Epoch 4
Train Loss: 0.0788
Validation AUC: 1.0000
Best model saved with AUC: 1.0000
Epoch 5
Train Loss: 0.0643
Validation AUC: 0.9999
Epoch 6
Train Loss: 0.0902
Validation AUC: 0.9999
Epoch 7
Train Loss: 0.0740
Validation AUC: 0.9998
Epoch 8
Train Loss: 0.0834
Validation AUC: 0.9999
Early stopping triggered.
Training completed.
Loading best model for Fold 1...
Loading best model for Fold 2...
Loading best model for Fold 3...
Loading best model for Fold 4...
Loading best model for Fold 5...
=== Test Results ===
Test Set AUC: 0.6974
Certainty (Standard Deviation) across folds: 0.14075589179992676
